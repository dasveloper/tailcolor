import Palette from '@components/Palette';
import PalettePreview from '@components/PalettePreview';
import { getColor, getCodeString } from '@utils/colors';
import Nav from '@components/Nav';
import Footer from '@components/Footer';
import Meta from '@components/Meta';
import redis from '@utils/redis';

function ColorPage({ hex }) {
  const color = getColor(hex);

  const related = [];

  const offset = color.hsv()[0] % 30;
  for (let i = 0; i < 360; i += 30) {
    related.push(color.set('hsv.h', i + offset));
  }

  return (
    <div className="min-h-screen">
      <Meta
        title={`${color.hex().toUpperCase()} â€” Tailwind color palette | Tailcolor`}
        description={`Tailwind color palette generated using ${color.hex().toUpperCase()} as the primary color.`}
      />
      <Nav />
      <main className="max-w-7xl mx-auto py-8 px-6">
        <article>
          <div className="pb-4 border-b border-gray-200">
            <h1 className="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
              {' '}
              {color.hex().toUpperCase()}
              {' '}
              Tailwind color palette
            </h1>
          </div>
          <p className="mt-4 text-base text-gray-500">
            This color palette is generated for the color
            {' '}
            <strong>{color.hex().toUpperCase()}</strong>
            {' '}
            as the
            {' '}
            <strong>500</strong>
            {' '}
            level color.
          </p>

          <Palette color={color} />

          <div className="mt-12 pb-4 border-b border-gray-200">
            <h2 className="text-lg font-semibold leading-7 text-gray-900 sm:text-xl sm:truncate">
              Using custom Tailwind palettes
            </h2>
          </div>
          <div className="prose max-w-none w-full grid grid-cols-1 sm:grid-cols-2 gap-6">
            <div className="py-6">
              <h4>Modify Tailwind config</h4>
              <p>
                To use your new Tailwind palette you will need to add it to your
                {' '}
                <code>tailwind.config.js</code>
                {' '}
                file. If you do not already have that file in your solution you will need to create it.
              </p>
              <p>
                If you want to add your palette to the default palette colors, add it under the
                {' '}
                <code>
                  theme.extend.colors
                </code>
                {' '}
                section of your configuration file.
                Alternatively, if you would rather completely replace the colors provided by Tailwind, add it directly under
                {' '}
                <code>theme.colors</code>
                .
              </p>
              <p>
                To learn more, read the complete documentation on the official
                {' '}
                <a target="_blank" href="https://tailwindcss.com/docs/customizing-colors" rel="noopener nofollow noreferrer">Tailwind Customizing Colors page</a>
                .
              </p>
            </div>
            <div className="text-sm">
              <pre>
                <code>
                  {getCodeString(color)}
                </code>
              </pre>
            </div>
          </div>
        </article>

        <aside>
          <div className="mt-12 pb-4 border-b border-gray-200">
            <h2 className="text-lg font-semibold leading-7 text-gray-900 sm:text-xl sm:truncate">
              Related Tailwind color palettes
            </h2>
          </div>
          <p className="mt-4 text-base text-gray-500">
            These related color palettes are generated by taking the HSV of the color
            {' '}
            <strong>{color.hex().toUpperCase()}</strong>
            {' '}
            and shifting it into multiple different colors. They would be a good jumping off point for generating all of the color palettes you will need.
          </p>
          <div className="mt-4 w-full grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {related.map((r) => <PalettePreview key={r} color={r} />)}
          </div>
        </aside>
      </main>
      <Footer />

    </div>
  );
}
export const getStaticPaths = async () => {
  const colors = await redis.lrange('colors', 0, 100);

  // Format postIds to path params
  const paths = colors.map((post) => ({ params: { hex: post } }));

  return {
    paths,
    fallback: 'blocking',
  };
};

export const getStaticProps = async ({ params }) => {
  const { hex } = params;

  return {
    props: { hex },
    revalidate: 10,
  };
};

export default ColorPage;
